# Валентина прогуляла лекцию по математике.
# Преподаватель решил подшутить над нерадивой студенткой и
# попросил ее на практическом занятии перечислить все положительные делители некоторых целых чисел.
# Для несложных примеров студентка быстро нашла решения (для числа 6 это: 1, 2, 3, 6; а для числа 16 это: 1, 2, 4, 8, 16), но этим все не закончилось.
# На домашнее задание ей дали варианты посложнее: 23436, 190187200, 380457890232.
# Решить такое вручную, как вы понимаете, практически нереально.
# Вот Валентина и обратилась к вам за помощью.
# Помогите ей (при помощи функции all_divisors(number), которую напишете сами).
# Постарайтесь найти самое оптимальное решение.
# Результат представьте в виде списка (не забудьте отсортировать по возрастанию).


# ==== ПРОСТОЙ КОД ЧЕРЕЗ ЦИКЛ WHILE ====

num = int(input('Enter a number: '))
i = 1
while i <= num:
    if num % i == 0:    # условие - если остаток от деления введенного числа на i равен 0 -> значение i - необходимый результат
        print(i, end = "  ")
    i += 1



print()
# ==== КОД С РЕЗУЛЬТАТОМ В ВИДЕ СПИСКА ====

num = int(input('Enter a number: '))
sp = [] # задаем пустой список
i = 1
while i <= num:
    if num % i == 0:
        sp.append(i)    # заполняем список значениями переменной i при соблюдении условия в if
    i += 1
print(sp)   # выводим список полученных чисел



print()
# ==== КОД С СОЗДАНИЕМ ЛОКАЛЬНОЙ ФУНКЦИИ + СПИСОК ====

num = int(input('Enter a number: '))
def all_divisors(num):  # создаем локальную функцию с именем all_divisors. На вход принимаем значение переменной num
    sp = []
    i = 1
    while i <= num:
        if num % i == 0:
            sp.append(i)
        i += 1
    return sp   # возвращаем список полученных чисел

res = all_divisors(num)     # вызываем созданную функцию в переменной res
print(res)      # выводим полученный результат на консоль